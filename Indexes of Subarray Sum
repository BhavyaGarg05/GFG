// Given an array arr[] containing only non-negative integers, your task is to find a continuous subarray (a contiguous sequence of elements) whose sum equals a specified value target. You need to return the 1-based indices of the leftmost and rightmost elements of this subarray. You need to find the first subarray whose sum is equal to the target.

//Note: If no such array is possible then, return [-1].

Code:
class Solution {
    static ArrayList<Integer> subarraySum(int[] arr, int target) {
        // code here
        ArrayList<Integer> arr1=new ArrayList<>();
        
        int i=0;
        int f=0,d=-1;
        while(i<arr.length){
            int sum=0;
            int j=i;
            for(;j<arr.length;j++){
                sum+=arr[j];
                if(sum==target){
                    
                    f=1;
                    break;
                }
            }
            if(f==1){
                arr1.add(i+1);
                arr1.add(j+1);
                return arr1;
            }
            i++;
        }
        arr1.add(-1);
        return arr1;
    }
}
